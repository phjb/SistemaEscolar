// <auto-generated />
using System;
using Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(EFApplicationContext))]
    [Migration("20210120000912_Fist-Migration")]
    partial class FistMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Domain.Models.AnoLetivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .HasColumnName("ano");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_final");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_inicio");

                    b.Property<bool>("Vigente")
                        .HasColumnType("boolean")
                        .HasColumnName("vigente");

                    b.HasKey("Id");

                    b.ToTable("ano_letivo", "sistema_escolar");
                });

            modelBuilder.Entity("Domain.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("IdEstado")
                        .HasColumnType("integer")
                        .HasColumnName("id_estado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("cidade", "sistema_escolar");
                });

            modelBuilder.Entity("Domain.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("char(8)")
                        .HasColumnName("cep");

                    b.Property<string>("Complemento")
                        .HasColumnType("text")
                        .HasColumnName("complemento");

                    b.Property<int>("IdCidade")
                        .HasColumnType("integer")
                        .HasColumnName("id_cidade");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("logradouro");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero");

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.ToTable("endereco", "sistema_escolar");
                });

            modelBuilder.Entity("Domain.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("char(2)")
                        .HasColumnName("sigla");

                    b.HasKey("Id");

                    b.ToTable("estado", "sistema_escolar");
                });

            modelBuilder.Entity("Domain.Models.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<string>("Celular")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("celular");

                    b.Property<string>("Cpf")
                        .HasColumnType("char(11)")
                        .HasColumnName("cpf");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("email");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("estado_civil");

                    b.Property<string>("Foto")
                        .HasColumnType("text")
                        .HasColumnName("foto");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("genero");

                    b.Property<Guid?>("IdEndereco")
                        .HasColumnType("uuid")
                        .HasColumnName("id_endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco");

                    b.ToTable("pessoa", "sistema_escolar");
                });

            modelBuilder.Entity("Domain.Models.Cidade", b =>
                {
                    b.HasOne("Domain.Models.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("fk_c_estado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Domain.Models.Endereco", b =>
                {
                    b.HasOne("Domain.Models.Cidade", "Cidade")
                        .WithMany("Enderecos")
                        .HasForeignKey("IdCidade")
                        .HasConstraintName("fk_e_cidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Domain.Models.Pessoa", b =>
                {
                    b.HasOne("Domain.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("IdEndereco");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Domain.Models.Cidade", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("Domain.Models.Estado", b =>
                {
                    b.Navigation("Cidades");
                });
#pragma warning restore 612, 618
        }
    }
}
